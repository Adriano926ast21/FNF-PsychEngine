# This is a basic workflow to help you get started with Actions

name: Android Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildAndroid:
    name: buildAndroid
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
<<<<<<< HEAD
          ndk-version: r21e

      - name: Setup Java JDK
        uses: actions/setup-java@v1
=======
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          sudo apt-get install libvlc-dev
          sudo apt-get install libvlccore-dev
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib install hmm --quiet
          haxelib run hmm install
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build Project.xml linux --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
>>>>>>> 5d7a915720e4664290216de0f6fb4338f36fe3ce
        with:
          java-version: 11

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Haxe
        uses: krdlab/setup-haxe@v1.1.5
        with:
          haxe-version: 4.2.5

      - name: Install Haxelib
        run: |
<<<<<<< HEAD
          haxelib --quiet setup /home/runner/haxelib
          haxelib --quiet install hxcpp > /dev/null
          haxelib --quiet install lime 7.9.0
          haxelib --quiet install openfl 9.1.0
          haxelib --quiet --never install flixel 4.11.0
          haxelib --quiet run lime setup flixel
          haxelib --quiet install flixel-tools
          haxelib --quiet install flixel-ui
          haxelib --quiet install hscript
          haxelib --quiet install flixel-addons
          haxelib --quiet install hxCodec
          haxelib git linc_luajit https://github.com/Sirox228/linc_luajit
          haxelib list

=======
          haxelib setup C:/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib install hmm --quiet
          haxelib run hmm install
        shell: cmd
>>>>>>> 5d7a915720e4664290216de0f6fb4338f36fe3ce
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION

      - name: Setup Lime
        run: |
<<<<<<< HEAD
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
          haxelib set lime 7.9.0 -y
          haxelib set openfl 9.1.0 -y
          haxelib set flixel 4.11.0 -y
          haxelib list
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

=======
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib install hmm --quiet
          haxelib run hmm install
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
>>>>>>> 5d7a915720e4664290216de0f6fb4338f36fe3ce
      - name: Compile
        run: haxelib run lime build android --app-version="4.0.0-${{ github.run_id}}"

      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: PE Android Build
          path: export/release/android/bin/app/build/outputs/apk/debug
